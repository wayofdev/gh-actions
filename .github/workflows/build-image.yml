---

on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      os:
        description: The operating system to run the workflow on
        required: true
        type: string
        default: ubuntu-latest
      push-to-hub:
        description: Push the image to Docker Hub
        required: true
        type: boolean
        default: false
      image-namespace:
        description: The namespace of the image
        required: true
        type: string
        default: wayofdev/php-base
      image-template-path:
        description: The path to the template of the image
        required: false
        type: string
        default: ./dist/base
      image-template:
        description: The template of the image
        required: true
        type: string
        default: 8.2-fpm-alpine
      image-version:
        description: The version of the image
        required: true
        type: string
        default: latest
    secrets:
      docker-username:
        description: Docker Hub username
        required: true
      docker-password:
        description: Docker Hub password
        required: true

name: 🚀 Build docker images

jobs:
  build:
    runs-on: ${{ inputs.os }}
    steps:
      - name: 📦 Check out the codebase
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4

      - name: 🛠️ Install goss and dgoss
        uses: e1himself/goss-installation-action@v1.1.0

      - name: 🤖 Generate dist files
        run: make generate

      - name: 🐳 Extract docker meta data
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.image-namespace }}
          tags: |
            type=raw,event=branch,value=latest
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
          flavor: |
            latest=false
            prefix=${{ inputs.image-template }}-

      - name: 🔑 Login to docker-hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.docker-username }}
          password: ${{ secrets.docker-password }}

      - name: 🖥️ Setup QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: 🛠️ Setup docker BuildX
        uses: docker/setup-buildx-action@v2
        with:
          install: true
          platforms: linux/amd64,linux/arm64

      - name: 🚀 Build image and push to docker-hub
        uses: docker/build-push-action@v4
        with:
          context: ${{ inputs.image-template-path }}/${{ inputs.image-template }}
          platforms: linux/amd64,linux/arm64
          push: ${{ inputs.push-to-hub == true }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=${{ inputs.image-namespace }}:${{ inputs.image-template }}-cache
          cache-to: type=registry,ref=${{ inputs.image-namespace }}:${{ inputs.image-template }}-cache,mode=max
          labels: ${{ steps.meta.outputs.labels }}

      - name: 🧪 Test Docker image
        run: |
          export IMAGE_TEMPLATE=${{ inputs.image-template }}
          export IMAGE_TAG=${{ inputs.image-namespace }}:${{ inputs.image-template }}-${{ inputs.image-version }}
          make test
